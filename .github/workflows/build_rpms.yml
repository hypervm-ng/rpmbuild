name: Build and publish rpm packages
on:
  push:
    paths:
      - '**/*.spec'
jobs:
  list:
    name: List packages to build
    runs-on: [ubuntu-latest]
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check changed files
        id: getfile
        run: |
          if [ $GITHUB_BASE_REF ]; then
            # Pull Request
            git fetch origin $GITHUB_BASE_REF --depth=1
            export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA | xargs )
            echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
          else
            GH_EVENT_BEFORE_SHA="${{ github.event.before }}"
            if [ $GH_EVENT_BEFORE_SHA == "0000000000000000000000000000000000000000" ]; then
              # first commit, taking different approach
              OF_MASTER_SHA=$( diff <( git rev-list "${1:-origin/master}" --reverse --topo-order ) <( git rev-list "${2:-HEAD}" --reverse --topo-order) --unified=1 | sed -ne 's/^ //p' | head -1 )
              export DIFF=$( git diff-tree --no-commit-id --name-only -r $OF_MASTER_SHA ${{ github.sha }} | xargs )
              echo "Seems to be a fresh branch, so the diff between $OF_MASTER_SHA and $GITHUB_SHA"
            else
              git fetch origin ${{ github.event.before }} --depth=1
              export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA | xargs )
              echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
            fi
          fi
          echo "$DIFF"
          echo "::set-output name=files::$( echo "$DIFF" )"
      - name: Build output based on the changed files
        id: packages
        run: |
          A=(${{ steps.getfile.outputs.files }});
          B=();
          for b in ${A[@]}; do item=$(echo $b | grep \.spec); B+=($item); done
          export PACKAGES=$(l=1; size=${#B[@]}; echo -n "["; for i in ${B[@]}; do dir=$(dirname $i); echo -n \"$dir\"; if [ $l -lt $size ]; then echo -n ","; let "l = l + 1"; fi; done; echo "]";)
          echo "$PACKAGES"
          echo "::set-output name=packages::$( echo $PACKAGES )"
    outputs:
     matrix: ${{ steps.packages.outputs.packages }}
  test_and_build:
    needs: list
    name: CI and send to Copr
    strategy:
      matrix:
        packages: ${{ fromJson(needs.list.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out proper version of sources
        uses: actions/checkout@v1
      - name: Sanity build of the rpm package from ${{ matrix.packages }}
        working-directory: ${{ matrix.packages }}
        run: |
          docker run -v ${PWD}:/sources -v ${PWD}:/output:Z quay.io/abn/rpmbuilder:centos-7
      - name: Build the srpm package from ${{ matrix.packages }}
        working-directory: ${{ matrix.packages }}
        run: |
          docker run -v ${PWD}:/sources -v ${PWD}:/output:Z -e "SRPM_ONLY=1" quay.io/abn/rpmbuilder:centos-7
      - name: Install API token for copr-cli
        env:
          API_LOGIN_CONTENT: ${{ secrets.COPR_API_LOGIN }}
          API_USERNAME_CONTENT: ${{ secrets.COPR_API_USERNAME }}
          API_TOKEN_CONTENT: ${{ secrets.COPR_API_TOKEN }}
        run: |
          mkdir -p "$HOME/.config"
          echo "[copr-cli]" > "$HOME/.config/copr"
          echo "login = $API_LOGIN_CONTENT" >> "$HOME/.config/copr"
          echo "username = $API_USERNAME_CONTENT" >> "$HOME/.config/copr"
          echo "token = $API_TOKEN_CONTENT" >> "$HOME/.config/copr"
          echo "copr_url = https://copr.fedorainfracloud.org" >> "$HOME/.config/copr"
      - name: Install tooling for Copr
        run: |
          pip install copr-cli
      - name: Submit the build to hypervm-ng Copr yum repository
        working-directory: ${{ matrix.packages }}
        if: github.ref == 'refs/heads/master'
        run: |
          $HOME/.local/bin/copr-cli build hypervm/hypervm-ng *.src.rpm
      - name: Submit the build to hypervm-ng-testing Copr yum repository
        working-directory: ${{ matrix.packages }}
        if: github.ref != 'refs/heads/master'
        run: |
          $HOME/.local/bin/copr-cli build hypervm/hypervm-ng-testing *.src.rpm
